---
name: release

on:
  workflow_dispatch:
    inputs:
      sha:
        description: The sha to associated with the release
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      linux-amd64-artifact: ${{ steps.outputs.outputs.linux-amd64-artifact }}
    strategy:
      fail-fast: true
      matrix:
        arch:
          - amd64
          - arm64
        os:
          - darwin
          - linux
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{ inputs.sha }}   # checkout out our sha to get the version
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: go.mod
      - id: build
        uses: ./.github/actions/build-provider
        with:
          target: ${{matrix.os}}/${{ matrix.arch }}
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: ${{ steps.build.outputs.name }}
          path: dist/${{ steps.build.outputs.name }}
          if-no-files-found: error
          retention-days: 1
      - id: outputs
        run: |
          {
            echo "linux-amd64-artifact=terraform-provider-enos_$(cat VERSION)_linux_amd64"
          } | tee -a "$GITHUB_OUTPUT"

  test-build-artifacts:
    needs: build
    name: enos scenario run
    uses: ./.github/workflows/run-sample.yml
    secrets: inherit
    with:
      sample-name: dev
      download: ${{ needs.build.outputs.linux-amd64-artifact }}

  release:
    needs:
      - build
      - test-build-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{ inputs.sha }}   # checkout out our sha to get the version
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: go.mod
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          path: dist
          name: terraform-provider-enos*
          merge-multiple: true
      - run: |
          ls -al ./dist
          chmod +x ./dist/*
      - name: Import gpg key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6.1.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Create a Github release
        env:
          GITHUB_TOKEN: ${{ secrets.ELEVATED_GITHUB_TOKEN }}
        run: |
          gpg --list-signatures
          # actions/download-artifact doesn't preserve file permissions. Reset the exec bits.
          chmod 755 dist/*
          go run ./tools/publish/cmd github create \
            --dist ./dist \
            --gpg-key-id "${{ secrets.GPG_KEY_ID }}" \
            --commit "${{ inputs.sha }}" \
            --version "$(cat VERSION)" \
            --manifest-path terraform-registry-manifest.json
