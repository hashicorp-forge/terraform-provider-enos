---
name: Release

on:
  # Allow the release pipeline to be triggered manually from GH Actions menu
  # This will release the version in `VERSION` file on `main` branch
  workflow_dispatch:
  # Run the release pipeline on merge only when VERSION is updated
  push:
    paths:
      - 'VERSION'
    branches:
      - main

# These permissions are necessary for the doormat-action to get the OIDC token
permissions:
  contents: read
  id-token: write

jobs:
  release:
    name: "Release"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: Assume service user role via Doormat
        uses: hashicorp/doormat-action@main
        with:
          # This role, its associated IAM policy, the allowed Github workflow
          # event types and their associated qualifiers are managed via
          # Terraform in the hashicorp/enos-ci repository. If you wish to allow
          # AWS credentials for different Github event types, workflows or
          # branches you'll need to update the role there.
          aws-role-arn: arn:aws:iam::147451547303:role/enos-provider
      - name: Build and Install Artifacts
        run: CI='true' make
      - name: Publish to S3 bucket
        run: go run ./tools/publish/cmd s3 upload --dist ./dist --bucket enos-provider-current
      - name: Import GPG key
        id: import_gpg
        # switching to upstream action as suggested in https://github.com/hashicorp/ghaction-import-gpg/issues/11#issuecomment-1185107410
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIV_SIGNING_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Upload to TFC private registry
        id: tfcupload
        run: |
          gpg --list-signatures
          go run ./tools/publish/cmd tfc upload --rename-binary "terraform-provider-enosdev" --provider-name "enosdev" --token "$TFC_PUBLISH_TOKEN"
        env:
          TFC_PUBLISH_TOKEN: ${{ secrets.TFC_PUBLISH_TOKEN }}
