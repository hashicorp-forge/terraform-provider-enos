---
name: Test FailureHandler logs

on:
  pull_request:

# These permissions are necessary for the doormat-action to get the OIDC token
permissions:
  contents: read
  id-token: write

jobs:
  test-failure-logs:
    name: "Test FailureHandler Logs"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENOS_PROVIDER_NAME: enos

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
      - name: Assume service user role via Doormat
        uses: hashicorp/doormat-action@main
        with:
          # This role, its associated IAM policy, the allowed Github workflow
          # event types and their associated qualifiers are managed via
          # Terraform in the hashicorp/enos-ci repository. If you wish to allow
          # AWS credentials for different Github event types, workflows or
          # branches you'll need to update the role there.
          aws-role-arn: arn:aws:iam::147451547303:role/enos-provider
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # the terraform wrapper will break terraform execution in enos because
          # it changes the output to text when we expect it to be JSON.
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Setup Enos
        uses: hashicorp/action-setup-enos@v1
        with:
          github-token:
            ${{ secrets.ELEVATED_GITHUB_TOKEN }}
      - name: Build assets
        run: 'sudo apt-get install -y upx-ucl && make flight-control-build'
      - name: Setup Vault Enterprise License
        id: license
        run: |
          mkdir -p ./enoscli-tests/support
          echo "${{ secrets.VAULT_LICENSE }}" > ./enoscli-tests/support/vault.hclic
      - name: Setup Enos SSH Keys
        id: sshkey
        run: |
          echo "${{ secrets.ENOS_CI_SSH_KEY }}" > ./enoscli-tests/support/enos-ci-ssh-key.pem
          chmod 600 ./enoscli-tests/support/enos-ci-ssh-key.pem
      - name: "Cleanup Enos tmp directories"
        continue-on-error: true
        if: ${{ always() }}
        run: rm -rf /tmp/enos*
      # we set CI false here as we will use the local artifact path to test
      - name: Build and Install Artifacts
        run: CI='false' make
      - name: "Enos Version"
        run: enos version
