---
name: Test FailureHandler logs

on:
  pull_request:

# These permissions are necessary for the doormat-action to get the OIDC token
permissions:
  contents: read
  id-token: write

jobs:
  test-failure-logs:
    name: "Test FailureHandler Logs"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
      - name: Assume service user role via Doormat
        uses: hashicorp/doormat-action@main
        with:
          # This role, its associated IAM policy, the allowed Github workflow
          # event types and their associated qualifiers are managed via
          # Terraform in the hashicorp/enos-ci repository. If you wish to allow
          # AWS credentials for different Github event types, workflows or
          # branches you'll need to update the role there.
          aws-role-arn: arn:aws:iam::147451547303:role/enos-provider
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # the terraform wrapper will break terraform execution in enos because
          # it changes the output to text when we expect it to be JSON.
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Setup Enos
        uses: hashicorp/action-setup-enos@v1
        with:
          github-token:
            ${{ secrets.ELEVATED_GITHUB_TOKEN }}
      - name: Build assets
        run: 'sudo apt-get install -y upx-ucl && make flight-control-build'
      - name: Setup Enos SSH Keys
        id: sshkey
        run: |
          mkdir -p ./enos/support
          echo "${{ secrets.ENOS_CI_SSH_KEY }}" > ./enos/support/enos-ci-ssh-key.pem
          chmod 600 ./enos/support/enos-ci-ssh-key.pem
      - name: "Cleanup Enos tmp directories"
        continue-on-error: true
        if: ${{ always() }}
        run: |
          [[ -d $HOME/.terraform.d ]] && rm -rf $HOME/.terraform.d
          rm -rf /tmp/enos*
      # we set CI false here as we will use the local artifact path to test
      - name: Build and Install Artifacts
        run: CI='false' make
      - name: Get scenario dependencies
        id: scenario-deps
        run: |
          echo "debug_data_root_dir=/tmp/enos/logs" >> $GITHUB_OUTPUT
          cp -r $HOME/.terraform.d/plugins/app.terraform.io ./dist
      - name: "Enos Version"
        run: enos version
      - name: "Run Enos Scenario"
        id: launch
        continue-on-error: true
        env:
          ENOS_DEBUG_DATA_ROOT_DIR: ${{ steps.scenario-deps.outputs.debug_data_root_dir }}
        run: enos scenario launch --timeout 60m0s --chdir ./enos
      - name: Retry Enos scenario if necessary
        id: launch_retry
        if: steps.launch.outcome == 'failure'
        env:
          ENOS_DEBUG_DATA_ROOT_DIR: ${{ steps.scenario-deps.outputs.debug_data_root_dir }}
        run: enos scenario launch --timeout 60m0s --chdir ./enos
      - name: Run Failing Remote Exec
        id: run_remote_exec
        continue-on-error: true
        env:
          ENOS_VAR_run_failure_handler_tests: true
          ENOS_DEBUG_DATA_ROOT_DIR: ${{ steps.scenario-deps.outputs.debug_data_root_dir }}
        run: enos scenario run --timeout 60m0s --chdir ./enos
      - name: Verify Log Files Exist
        id: test_logs_exist
        if: steps.run_remote_exec.outcome == 'failure'
        run: |
          log_file_count=$(ls ${{ steps.scenario-deps.outputs.debug_data_root_dir }}/{consul,vault}* | wc -l)
          test $log_file_count -eq 2
      - name: Ensure scenario has been destroyed
        env:
          ENOS_DEBUG_DATA_ROOT_DIR: ${{ steps.scenario-deps.outputs.debug_data_root_dir }}
        if: ${{ always() }}
        run: enos scenario destroy --timeout 60m0s --chdir ./enos
      - name: Clean up Enos runtime directories
        if: ${{ always() }}
        run: |
          rm -rf /tmp/enos*
          rm -rf ./enos/support
          rm -rf ./enos/.enos
          rm -rf $HOME/.terraform.d
