---
name: test from hashicorp-qti/enos

on:
  workflow_dispatch:
  workflow_call:

# These permissions are necessary for the doormat-action to get the OIDC token
permissions:
  contents: read
  id-token: write

jobs:
  scenario-kind:
    name: enos scenario run kind
    runs-on: ubuntu-latest
    env:
      ENOS_VAR_tfc_api_token: ${{ secrets.TF_API_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        shell: bash
        working-directory: enos
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
      - uses: hashicorp/setup-terraform@v2
        with:
          # the terraform wrapper will break terraform execution in enos because
          # it changes the output to text when we expect it to be JSON.
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - uses: hashicorp/action-setup-enos@v1
        with:
          github-token:
            ${{ secrets.ELEVATED_GITHUB_TOKEN }}
      - run: enos scenario run kind use:enos --timeout 60m0s
      - if: ${{ always() }}
        run: enos scenario destroy kind use:enos --timeout 60m0s
      - if: ${{ always() }}
        name: Remove enos runtime directories
        run: |
          rm -rf /tmp/enos*
          rm -rf ./support
          rm -rf ./.enos
          rm -rf $HOME/.terraform.d

  scenario-vault:
    uses: ./.github/workflows/run_scenario_vault_ssh.yml
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            backend: raft
            distro: ubuntu
            edition: oss
            use: enos
            unseal_method: awskms
            version: 1.13.2
          - arch: arm64
            backend: consul
            consul_edition: ent
            consul_version: 1.13.8
            distro: ubuntu
            edition: ent
            use: enos
            unseal_method: shamir
            version: 1.12.6
          - arch: amd64
            backend: consul
            consul_edition: oss
            consul_version: 1.15.3
            distro: rhel
            edition: ent
            use: enos
            unseal_method: shamir
            version: 1.11.10
          - arch: arm64
            backend: raft
            distro: rhel
            edition: oss
            use: enos
            unseal_method: awskms
            version: 1.8.12
    with:
      arch: ${{ matrix.arch }}
      backend: ${{ matrix.backend }}
      consul_edition: ${{ matrix.consul_edition }}
      consul_version: ${{ matrix.consul_version }}
      distro: ${{ matrix.distro }}
      edition: ${{ matrix.edition }}
      use: ${{ matrix.use }}
      unseal_method: ${{ matrix.unseal_method }}
      version: ${{ matrix.version }}

  scenario-vault-k8s:
    name: enos scenario run vault_k8s
    runs-on: ubuntu-latest
    env:
      ENOS_DEBUG_DATA_ROOT_DIR: /tmp/enos/logs
      ENOS_VAR_tfc_api_token: ${{ secrets.TF_API_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        shell: bash
        working-directory: enos
    strategy:
      matrix:
        filter:
          - edition:ent use:enos
          - edition:oss use:enos
      fail-fast: false
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
      - uses: hashicorp/setup-terraform@v2
        with:
          # the terraform wrapper will break terraform execution in enos because
          # it changes the output to text when we expect it to be JSON.
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - uses: hashicorp/action-setup-enos@v1
        with:
          github-token:
            ${{ secrets.ELEVATED_GITHUB_TOKEN }}
      - name: Set up support files
        run: |
          mkdir -p ./support
          echo "${{ secrets.VAULT_LICENSE }}" > ./support/vault.hclic
          chmod 600 ./support/vault.hclic
      - run: enos scenario run vault_k8s ${{ matrix.filter }} --timeout 60m0s
      - if: ${{ always() }}
        run: enos scenario destroy vault_k8s ${{ matrix.filter }} --timeout 60m0s
      - if: ${{ always() }}
        name: Remove enos runtime directories
        run: |
          rm -rf /tmp/enos*
          rm -rf ./support
          rm -rf ./.enos
          rm -rf $HOME/.terraform.d

  completed-successfully:
    if: |
        always() && (cancelled() ||
        contains(needs.*.result, 'cancelled') ||
        contains(needs.*.result, 'failure'))
    runs-on: ubuntu-latest
    needs:
      - scenario-kind
      - scenario-vault
      - scenario-vault-k8s
    steps:
      - run: |
          echo "Some of the required build and test workflows have failed!"
          exit 1
